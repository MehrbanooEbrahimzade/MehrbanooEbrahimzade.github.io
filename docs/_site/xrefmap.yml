### YamlMime:XRefMap
sorted: true
references:
- uid: test
  name: test
  href: api/test.html
  commentId: N:test
  fullName: test
  nameWithType: test
- uid: test.MyClass
  name: MyClass
  href: api/test.MyClass.html
  commentId: T:test.MyClass
  fullName: test.MyClass
  nameWithType: MyClass
- uid: test.MyClass.Sum(System.Int32,System.Int32)
  name: Sum(Int32, Int32)
  href: api/test.MyClass.html#test_MyClass_Sum_System_Int32_System_Int32_
  commentId: M:test.MyClass.Sum(System.Int32,System.Int32)
  fullName: test.MyClass.Sum(System.Int32, System.Int32)
  nameWithType: MyClass.Sum(Int32, Int32)
- uid: test.MyClass.Sum*
  name: Sum
  href: api/test.MyClass.html#test_MyClass_Sum_
  commentId: Overload:test.MyClass.Sum
  isSpec: "True"
  fullName: test.MyClass.Sum
  nameWithType: MyClass.Sum
- uid: test.Pages
  name: test.Pages
  href: api/test.Pages.html
  commentId: N:test.Pages
  fullName: test.Pages
  nameWithType: test.Pages
- uid: test.Pages.ErrorModel
  name: ErrorModel
  href: api/test.Pages.ErrorModel.html
  commentId: T:test.Pages.ErrorModel
  fullName: test.Pages.ErrorModel
  nameWithType: ErrorModel
- uid: test.Pages.ErrorModel.#ctor(ILogger{test.Pages.ErrorModel})
  name: ErrorModel(ILogger<ErrorModel>)
  href: api/test.Pages.ErrorModel.html#test_Pages_ErrorModel__ctor_ILogger_test_Pages_ErrorModel__
  commentId: M:test.Pages.ErrorModel.#ctor(ILogger{test.Pages.ErrorModel})
  name.vb: ErrorModel(ILogger(Of ErrorModel))
  fullName: test.Pages.ErrorModel.ErrorModel(ILogger<test.Pages.ErrorModel>)
  fullName.vb: test.Pages.ErrorModel.ErrorModel(ILogger(Of test.Pages.ErrorModel))
  nameWithType: ErrorModel.ErrorModel(ILogger<ErrorModel>)
  nameWithType.vb: ErrorModel.ErrorModel(ILogger(Of ErrorModel))
- uid: test.Pages.ErrorModel.#ctor*
  name: ErrorModel
  href: api/test.Pages.ErrorModel.html#test_Pages_ErrorModel__ctor_
  commentId: Overload:test.Pages.ErrorModel.#ctor
  isSpec: "True"
  fullName: test.Pages.ErrorModel.ErrorModel
  nameWithType: ErrorModel.ErrorModel
- uid: test.Pages.ErrorModel.OnGet
  name: OnGet()
  href: api/test.Pages.ErrorModel.html#test_Pages_ErrorModel_OnGet
  commentId: M:test.Pages.ErrorModel.OnGet
  fullName: test.Pages.ErrorModel.OnGet()
  nameWithType: ErrorModel.OnGet()
- uid: test.Pages.ErrorModel.OnGet*
  name: OnGet
  href: api/test.Pages.ErrorModel.html#test_Pages_ErrorModel_OnGet_
  commentId: Overload:test.Pages.ErrorModel.OnGet
  isSpec: "True"
  fullName: test.Pages.ErrorModel.OnGet
  nameWithType: ErrorModel.OnGet
- uid: test.Pages.ErrorModel.RequestId
  name: RequestId
  href: api/test.Pages.ErrorModel.html#test_Pages_ErrorModel_RequestId
  commentId: P:test.Pages.ErrorModel.RequestId
  fullName: test.Pages.ErrorModel.RequestId
  nameWithType: ErrorModel.RequestId
- uid: test.Pages.ErrorModel.RequestId*
  name: RequestId
  href: api/test.Pages.ErrorModel.html#test_Pages_ErrorModel_RequestId_
  commentId: Overload:test.Pages.ErrorModel.RequestId
  isSpec: "True"
  fullName: test.Pages.ErrorModel.RequestId
  nameWithType: ErrorModel.RequestId
- uid: test.Pages.ErrorModel.ShowRequestId
  name: ShowRequestId
  href: api/test.Pages.ErrorModel.html#test_Pages_ErrorModel_ShowRequestId
  commentId: P:test.Pages.ErrorModel.ShowRequestId
  fullName: test.Pages.ErrorModel.ShowRequestId
  nameWithType: ErrorModel.ShowRequestId
- uid: test.Pages.ErrorModel.ShowRequestId*
  name: ShowRequestId
  href: api/test.Pages.ErrorModel.html#test_Pages_ErrorModel_ShowRequestId_
  commentId: Overload:test.Pages.ErrorModel.ShowRequestId
  isSpec: "True"
  fullName: test.Pages.ErrorModel.ShowRequestId
  nameWithType: ErrorModel.ShowRequestId
- uid: test.Pages.IndexModel
  name: IndexModel
  href: api/test.Pages.IndexModel.html
  commentId: T:test.Pages.IndexModel
  fullName: test.Pages.IndexModel
  nameWithType: IndexModel
- uid: test.Pages.IndexModel.#ctor(ILogger{test.Pages.IndexModel})
  name: IndexModel(ILogger<IndexModel>)
  href: api/test.Pages.IndexModel.html#test_Pages_IndexModel__ctor_ILogger_test_Pages_IndexModel__
  commentId: M:test.Pages.IndexModel.#ctor(ILogger{test.Pages.IndexModel})
  name.vb: IndexModel(ILogger(Of IndexModel))
  fullName: test.Pages.IndexModel.IndexModel(ILogger<test.Pages.IndexModel>)
  fullName.vb: test.Pages.IndexModel.IndexModel(ILogger(Of test.Pages.IndexModel))
  nameWithType: IndexModel.IndexModel(ILogger<IndexModel>)
  nameWithType.vb: IndexModel.IndexModel(ILogger(Of IndexModel))
- uid: test.Pages.IndexModel.#ctor*
  name: IndexModel
  href: api/test.Pages.IndexModel.html#test_Pages_IndexModel__ctor_
  commentId: Overload:test.Pages.IndexModel.#ctor
  isSpec: "True"
  fullName: test.Pages.IndexModel.IndexModel
  nameWithType: IndexModel.IndexModel
- uid: test.Pages.IndexModel.OnGet
  name: OnGet()
  href: api/test.Pages.IndexModel.html#test_Pages_IndexModel_OnGet
  commentId: M:test.Pages.IndexModel.OnGet
  fullName: test.Pages.IndexModel.OnGet()
  nameWithType: IndexModel.OnGet()
- uid: test.Pages.IndexModel.OnGet*
  name: OnGet
  href: api/test.Pages.IndexModel.html#test_Pages_IndexModel_OnGet_
  commentId: Overload:test.Pages.IndexModel.OnGet
  isSpec: "True"
  fullName: test.Pages.IndexModel.OnGet
  nameWithType: IndexModel.OnGet
- uid: test.Pages.PrivacyModel
  name: PrivacyModel
  href: api/test.Pages.PrivacyModel.html
  commentId: T:test.Pages.PrivacyModel
  fullName: test.Pages.PrivacyModel
  nameWithType: PrivacyModel
- uid: test.Pages.PrivacyModel.#ctor(ILogger{test.Pages.PrivacyModel})
  name: PrivacyModel(ILogger<PrivacyModel>)
  href: api/test.Pages.PrivacyModel.html#test_Pages_PrivacyModel__ctor_ILogger_test_Pages_PrivacyModel__
  commentId: M:test.Pages.PrivacyModel.#ctor(ILogger{test.Pages.PrivacyModel})
  name.vb: PrivacyModel(ILogger(Of PrivacyModel))
  fullName: test.Pages.PrivacyModel.PrivacyModel(ILogger<test.Pages.PrivacyModel>)
  fullName.vb: test.Pages.PrivacyModel.PrivacyModel(ILogger(Of test.Pages.PrivacyModel))
  nameWithType: PrivacyModel.PrivacyModel(ILogger<PrivacyModel>)
  nameWithType.vb: PrivacyModel.PrivacyModel(ILogger(Of PrivacyModel))
- uid: test.Pages.PrivacyModel.#ctor*
  name: PrivacyModel
  href: api/test.Pages.PrivacyModel.html#test_Pages_PrivacyModel__ctor_
  commentId: Overload:test.Pages.PrivacyModel.#ctor
  isSpec: "True"
  fullName: test.Pages.PrivacyModel.PrivacyModel
  nameWithType: PrivacyModel.PrivacyModel
- uid: test.Pages.PrivacyModel.OnGet
  name: OnGet()
  href: api/test.Pages.PrivacyModel.html#test_Pages_PrivacyModel_OnGet
  commentId: M:test.Pages.PrivacyModel.OnGet
  fullName: test.Pages.PrivacyModel.OnGet()
  nameWithType: PrivacyModel.OnGet()
- uid: test.Pages.PrivacyModel.OnGet*
  name: OnGet
  href: api/test.Pages.PrivacyModel.html#test_Pages_PrivacyModel_OnGet_
  commentId: Overload:test.Pages.PrivacyModel.OnGet
  isSpec: "True"
  fullName: test.Pages.PrivacyModel.OnGet
  nameWithType: PrivacyModel.OnGet
